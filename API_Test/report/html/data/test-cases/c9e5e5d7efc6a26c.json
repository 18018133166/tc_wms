{
  "uid" : "c9e5e5d7efc6a26c",
  "name" : "test_01_add_goods",
  "fullName" : "cases.test_goods_management.Test_goods_management#test_01_add_goods",
  "historyId" : "8558d841f5ffcb65ff0ea37e2f72c4b9",
  "time" : {
    "start" : 1600091723555,
    "stop" : 1600091727848,
    "duration" : 4293
  },
  "description" : "\n        首次新增商品,商品名称根据当前时间命名（后缀格式年月日时分秒）,goods_name定义为全局变量\n        ",
  "descriptionHtml" : "<pre><code>    首次新增商品,商品名称根据当前时间命名（后缀格式年月日时分秒）,goods_name定义为全局变量\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None != None",
  "statusTrace" : "self = <test_goods_management.Test_goods_management object at 0x000001CFB4AF6E48>\n\n    @allure.feature('1.商品管理')\n    @allure.story('1.1.添加商品')\n    @allure.severity('critical')\n    def test_01_add_goods(self):\n        '''\n        首次新增商品,商品名称根据当前时间命名（后缀格式年月日时分秒）,goods_name定义为全局变量\n        '''\n        response = add_goods()\n        code = response[0].get('code')\n        global goods_name\n        goods_name = response[4]\n        with allure.step(\"步骤1，新增商品是否成功：code == 0\"):\n            allure.attach(goods_name, '商品名称')\n            self.response(response)\n            assert code == 0\n        sql = f'SELECT * FROM sm_goods WHERE goods_name = \\'{goods_name}\\''\n        result = ExecSql().exec_sql('wms', 'select_one', sql)\n        with allure.step('步骤2，数据库是否落地成功：sql执行结果 != None'):\n            allure.attach(sql, 'sql语句')\n            allure.attach(str(result), '执行结果')\n>           assert result != None\nE           assert None != None\n\ncases\\test_goods_management.py:39: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        首次新增商品,商品名称根据当前时间命名（后缀格式年月日时分秒）,goods_name定义为全局变量\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None != None",
    "statusTrace" : "self = <test_goods_management.Test_goods_management object at 0x000001CFB4AF6E48>\n\n    @allure.feature('1.商品管理')\n    @allure.story('1.1.添加商品')\n    @allure.severity('critical')\n    def test_01_add_goods(self):\n        '''\n        首次新增商品,商品名称根据当前时间命名（后缀格式年月日时分秒）,goods_name定义为全局变量\n        '''\n        response = add_goods()\n        code = response[0].get('code')\n        global goods_name\n        goods_name = response[4]\n        with allure.step(\"步骤1，新增商品是否成功：code == 0\"):\n            allure.attach(goods_name, '商品名称')\n            self.response(response)\n            assert code == 0\n        sql = f'SELECT * FROM sm_goods WHERE goods_name = \\'{goods_name}\\''\n        result = ExecSql().exec_sql('wms', 'select_one', sql)\n        with allure.step('步骤2，数据库是否落地成功：sql执行结果 != None'):\n            allure.attach(sql, 'sql语句')\n            allure.attach(str(result), '执行结果')\n>           assert result != None\nE           assert None != None\n\ncases\\test_goods_management.py:39: AssertionError",
    "steps" : [ {
      "name" : "步骤1，新增商品是否成功：code == 0",
      "time" : {
        "start" : 1600091726841,
        "stop" : 1600091726850,
        "duration" : 9
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6e0631660b39e404",
        "name" : "商品名称",
        "source" : "6e0631660b39e404.attach",
        "type" : "text/plain",
        "size" : 22
      }, {
        "uid" : "b81a7f343a0ec3b5",
        "name" : "headers",
        "source" : "b81a7f343a0ec3b5.attach",
        "type" : "text/plain",
        "size" : 1189
      }, {
        "uid" : "152367eda031ca33",
        "name" : "url",
        "source" : "152367eda031ca33.attach",
        "type" : "text/plain",
        "size" : 53
      }, {
        "uid" : "85649c61040830b3",
        "name" : "body",
        "source" : "85649c61040830b3.attach",
        "type" : "text/plain",
        "size" : 3738
      }, {
        "uid" : "4aa641ebeb0ae1f5",
        "name" : "response",
        "source" : "4aa641ebeb0ae1f5.attach",
        "type" : "text/plain",
        "size" : 11
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 5,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "步骤2，数据库是否落地成功：sql执行结果 != None",
      "time" : {
        "start" : 1600091727845,
        "stop" : 1600091727848,
        "duration" : 3
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert None != None\n",
      "statusTrace" : "  File \"D:\\API_Test\\cases\\test_goods_management.py\", line 39, in test_01_add_goods\n    assert result != None\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a86b153fcc0f2a8e",
        "name" : "sql语句",
        "source" : "a86b153fcc0f2a8e.attach",
        "type" : "text/plain",
        "size" : 66
      }, {
        "uid" : "1696071f7def0962",
        "name" : "执行结果",
        "source" : "1696071f7def0962.attach",
        "type" : "text/plain",
        "size" : 4
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 2,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "ac9ad12ec8336975",
      "name" : "log",
      "source" : "ac9ad12ec8336975.txt",
      "type" : "text/plain",
      "size" : 751
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 8,
    "hasContent" : true,
    "stepsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "1.商品管理"
  }, {
    "name" : "story",
    "value" : "1.1.添加商品"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_goods_management"
  }, {
    "name" : "subSuite",
    "value" : "Test_goods_management"
  }, {
    "name" : "host",
    "value" : "DESKTOP-7B7D4BO"
  }, {
    "name" : "thread",
    "value" : "7680-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_goods_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "c9e5e5d7efc6a26c.json",
  "parameterValues" : [ ]
}