{
  "uid" : "c2a5cfd9db3bf139",
  "name" : "test_02_add_goods_repeat",
  "fullName" : "cases.test_goods_management.Test_goods_management#test_02_add_goods_repeat",
  "historyId" : "8cb62918180d0305ea6d5289dca35920",
  "time" : {
    "start" : 1600093603275,
    "stop" : 1600093603517,
    "duration" : 242
  },
  "description" : "\n        新增重复商品（根据商品名称判断，传入test_01_add_定义的全局变量goods_name）\n        ",
  "descriptionHtml" : "<pre><code>    新增重复商品（根据商品名称判断，传入test_01_add_定义的全局变量goods_name）\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0 == 1",
  "statusTrace" : "self = <test_goods_management.Test_goods_management object at 0x000001F0962F4508>\n\n    @allure.feature('1.商品管理')\n    @allure.story('1.1.添加商品')\n    @allure.severity('normal')\n    def test_02_add_goods_repeat(self):\n        '''\n        新增重复商品（根据商品名称判断，传入test_01_add_定义的全局变量goods_name）\n        '''\n        response = add_goods_repeat(goods_name)\n        code = response[0].get('code')\n        with allure.step(\"步骤1，新增重复商品是否失败：code == 2\"):\n            allure.attach(goods_name, '商品名称')\n            self.response(response)\n            assert code == 2\n        sql = f'SELECT count(1) FROM sm_goods WHERE goods_name = \\'{goods_name}\\''\n        result = ExecSql().exec_sql('wms', 'select_list', sql)\n        count = result[0][0]\n        with allure.step('步骤2，数据库是否未插入数据：count == 1'):\n            allure.attach(sql, 'sql语句')\n            allure.attach(str(result), '执行结果')\n>           assert count == 1\nE           assert 0 == 1\n\ncases\\test_goods_management.py:61: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        新增重复商品（根据商品名称判断，传入test_01_add_定义的全局变量goods_name）\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0 == 1",
    "statusTrace" : "self = <test_goods_management.Test_goods_management object at 0x000001F0962F4508>\n\n    @allure.feature('1.商品管理')\n    @allure.story('1.1.添加商品')\n    @allure.severity('normal')\n    def test_02_add_goods_repeat(self):\n        '''\n        新增重复商品（根据商品名称判断，传入test_01_add_定义的全局变量goods_name）\n        '''\n        response = add_goods_repeat(goods_name)\n        code = response[0].get('code')\n        with allure.step(\"步骤1，新增重复商品是否失败：code == 2\"):\n            allure.attach(goods_name, '商品名称')\n            self.response(response)\n            assert code == 2\n        sql = f'SELECT count(1) FROM sm_goods WHERE goods_name = \\'{goods_name}\\''\n        result = ExecSql().exec_sql('wms', 'select_list', sql)\n        count = result[0][0]\n        with allure.step('步骤2，数据库是否未插入数据：count == 1'):\n            allure.attach(sql, 'sql语句')\n            allure.attach(str(result), '执行结果')\n>           assert count == 1\nE           assert 0 == 1\n\ncases\\test_goods_management.py:61: AssertionError",
    "steps" : [ {
      "name" : "步骤1，新增重复商品是否失败：code == 2",
      "time" : {
        "start" : 1600093603401,
        "stop" : 1600093603404,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d18799cada4a53a6",
        "name" : "商品名称",
        "source" : "d18799cada4a53a6.attach",
        "type" : "text/plain",
        "size" : 22
      }, {
        "uid" : "28fbe1019d35d347",
        "name" : "headers",
        "source" : "28fbe1019d35d347.attach",
        "type" : "text/plain",
        "size" : 1193
      }, {
        "uid" : "c2ac7ed14a3bdf36",
        "name" : "url",
        "source" : "c2ac7ed14a3bdf36.attach",
        "type" : "text/plain",
        "size" : 53
      }, {
        "uid" : "1a26a51fa824a9f5",
        "name" : "body",
        "source" : "1a26a51fa824a9f5.attach",
        "type" : "text/plain",
        "size" : 3717
      }, {
        "uid" : "d29391c70f552094",
        "name" : "response",
        "source" : "d29391c70f552094.attach",
        "type" : "text/plain",
        "size" : 11
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 5,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "步骤2，数据库是否未插入数据：count == 1",
      "time" : {
        "start" : 1600093603514,
        "stop" : 1600093603517,
        "duration" : 3
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 0 == 1\n",
      "statusTrace" : "  File \"D:\\API_Test\\cases\\test_goods_management.py\", line 61, in test_02_add_goods_repeat\n    assert count == 1\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "56b0e0633da3bea5",
        "name" : "sql语句",
        "source" : "56b0e0633da3bea5.attach",
        "type" : "text/plain",
        "size" : 73
      }, {
        "uid" : "a433606fa2cbabdc",
        "name" : "执行结果",
        "source" : "a433606fa2cbabdc.attach",
        "type" : "text/plain",
        "size" : 7
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 2,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "acce099fd5b644db",
      "name" : "log",
      "source" : "acce099fd5b644db.txt",
      "type" : "text/plain",
      "size" : 251
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 8,
    "hasContent" : true,
    "stepsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "1.1.添加商品"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "1.商品管理"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_goods_management"
  }, {
    "name" : "subSuite",
    "value" : "Test_goods_management"
  }, {
    "name" : "host",
    "value" : "DESKTOP-7B7D4BO"
  }, {
    "name" : "thread",
    "value" : "10188-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_goods_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "c2a5cfd9db3bf139.json",
  "parameterValues" : [ ]
}